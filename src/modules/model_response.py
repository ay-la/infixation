import string

from typing import List

class ModelResponse:
    '''
    A class to represent the response of an OpenAI language model for an expletive infixation task.

    Attributes
    ----------
    word : str
        the word given to the model for infixation
    correct_infix : str
        the expected response
    examples : List[tuple]
        the list of n-shot examples given to the model during prompting
    num_examples : int
        the value of n
    result : str
        the full response generated by the model
    predicted_correctly : bool
        the boolean value of whether or not the correct infix is contained in the model's response to the prompt
    logprobs : List[openai.openai_object.OpenAIObject]
        the top 3 logprobs of possible tokens
    '''
    def __init__(self, word: str, correct_infix: str, 
                 examples: List[tuple], result: str, logprobs: List):
        self.word = word
        self.correct_infix = correct_infix.lower()
        self.examples = examples
        self.num_examples = len(examples)
        self.result = result
        self.predicted_correctly = self.is_correct(result)
        self.logprobs = logprobs

    def clean_result(self, result):
        '''
        Cleans the string generated by the model to make comparison to the correct infix easier.
        Returns the words of the response as a list of strings without punctuation, except hyphens which are used for the infixation.
        '''
        result_str = result.lower()
        punctuations = string.punctuation.replace("-", "")
        clean_result = ''.join(char for char in result_str if char not in punctuations)
        return clean_result.split()
    
    def is_correct(self, result):
        '''
        Returns True if the correct infix (with or without hypenation) is found in the model response, otherwise False.
        '''
        is_correct = False

        if self.correct_infix in self.clean_result(result):
            is_correct = True

        if self.correct_infix.replace('-', '') in self.clean_result(result):
            is_correct = True
        
        return is_correct

    def __str__(self):
        return f"ModelResponse(word={self.word},\n num_examples={self.num_examples},\n examples={self.examples},\n result={self.result},\n predicted_correctly={self.predicted_correctly},\n logprobs={self.logprobs})"